/* Declare color palette */
:root {
    --black: #202022;
    --white: #ffffff;
    --accent: #63d297;
    --red: #ff5252;
    --blue: #52a4ff;
    --purple: #52a4ff;
    --gray: #888888;
}

/* Dark theme colors */
body[theme="dark"] {
    --background-color: var(--black);
    --black-node-border: var(--accent);
    --black-node-color: var(--accent);
    --black-node-bkgd: var(--black);
    --red-node-border: var(--red);
    --red-node-color: var(--black);
    --red-node-bkgd: var(--red);
    --text-color: var(--white);
}

/* Light theme colors */
body[theme="light"] {
    --background-color: var(--white);
    --black-node-border: var(--black);
    --black-node-color: var(--white);
    --black-node-bkgd: var(--black);
    --red-node-border: var(--red);
    --red-node-color: var(--white);
    --red-node-bkgd: var(--red);
    --text-color: dark;
}


* {
    box-sizing: border-box
}


body {
    margin: 0; padding: 10px;
    width: 100vw; height: 100vh;

    background: var(--background-color);

    display: flex;
    align-items: center;
    justify-content: center;

    transition: background-color .2s;
}

.red-black-tree {
    white-space: nowrap;
}

.red-black-tree .node, .red-black-tree .nil {
    display: inline-block;

    margin: 0;

    font-family: "JetBrains Mono", "Consolas", monospace;
    font-size: 0;

    --l: 0;
    --theta: -90;
}

.red-black-tree .node > .value-input::before, .red-black-tree .nil > .value-input::before {
    content: "";

    display: block;
    width: 0; height: var(--l);

    position: absolute;
    left: 50%; top: calc(50% - var(--l));

    outline: 1px solid var(--gray);

    z-index: -1000;

    transform-origin: bottom;
    transform: rotate(calc(90deg + var(--theta)));
}

.red-black-tree .node { vertical-align: top }

/* specific styling targeted towards special nodes */
.red-black-tree .nil:nth-child(2), .red-black-tree .node:nth-child(2) { margin-right: 10px }


.red-black-tree .value-input {
    position: relative;

    min-width: 3em; width: fit-content;

    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;

    left: calc(var(--left) * 1px);

    margin-bottom: 10px;

    font-size: 13pt;

    outline: none;
}

.red-black-tree .node > .value-input {
    padding: 0 .6em;
}
.red-black-tree .nil > .value-input {
    padding: 0 .25em;
}

.red-black-tree .nil > .value-input {
    height: 2em;
    background: var(--black-node-bkgd);
    border: 2px solid var(--black-node-border);
    color: var(--black-node-color);
}

.red-black-tree .node > .value-input {
    height: 3em;
    border-radius: 50%;
}

.red-black-tree .red.node > .value-input {
    background: var(--red-node-bkgd);
    color: var(--red-node-color);
    border: 2px solid var(--red-node-border)
}

.red-black-tree .black.node > .value-input {
    background: var(--black-node-bkgd);
    color: var(--black-node-color);
    border: 2px solid var(--black-node-border);
}

.red-black-tree .double-black.node > .value-input {
    background: var(--black-node-bkgd);
    color: var(--black-node-color);
    border: 2px solid var(--black-node-border);
    outline: 2px solid var(--black-node-border);
    outline-offset: -6px;
}

body[theme="light"] .red-black-tree .double-black.node > .value-input {
    background: var(--black-node-bkgd);
    color: var(--black-node-color);
    border: 2px solid var(--black-node-border);
    outline: 2px solid var(--white);
    outline-offset: -4px;
}

.red-black-tree .minus-1.node > .value-input,
.red-black-tree .minus-2.node > .value-input,
.red-black-tree .plus-1.node > .value-input,
.red-black-tree .plus-2.node > .value-input {
    background: var(--black-node-bkgd);
}

.red-black-tree .minus-1.node > .value-input,
.red-black-tree .minus-2.node > .value-input{
    color: var(--blue);
    border: 2px solid var(--blue);
}
.red-black-tree .plus-1.node > .value-input,
.red-black-tree .plus-2.node > .value-input {
    color: var(--red);
    border: 2px solid var(--red);
}

.red-black-tree .minus-1.node > .value-input::after,
.red-black-tree .minus-2.node > .value-input::after,
.red-black-tree .plus-1.node > .value-input::after,
.red-black-tree .plus-2.node > .value-input::after {
    font-size: 6pt;
    content: '+2';
    vertical-align: top;
}

.value-input-text {
    outline: none;
}

.red-black-tree .node-color {
    position: absolute;
    right: 120%;
    background: var(--white);
    padding: 4px;
    outline: 1px solid var(--black);
    display: none; /*block*/
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    z-index: 100;
    height: 100px;
    width: 52px;
}

body[theme="dark"] .red-black-tree .node-color {
    outline-color: var(--accent);
}

.red-black-tree .node-color .color-btn{
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    padding: 0;
    margin: 0;
    outline-width: 2px;
    outline-style: solid;
    outline-color: transparent;
    outline-offset: -2px;
    border: none;
    background: none;
    flex: none;
}
.red-black-tree .node-color .color-btn.black { background: var(--black) }
.red-black-tree .node-color .color-btn.double-black { background: var(--black); outline-color: var(--white); outline-offset: -4px }
.red-black-tree .node-color .color-btn.red { background: var(--red) }
.red-black-tree .node-color .color-btn.minus-1,
.red-black-tree .node-color .color-btn.minus-2 { outline-color: var(--blue) }
.red-black-tree .node-color .color-btn.minus-1::before,
.red-black-tree .node-color .color-btn.minus-2::before { color: var(--blue); content: '-'; font-size: 8pt }
.red-black-tree .node-color .color-btn.minus-2::before { content: '-2' }
.red-black-tree .node-color .color-btn.plus-1,
.red-black-tree .node-color .color-btn.plus-2 { outline-color: var(--red) }
.red-black-tree .node-color .color-btn.plus-1::before,
.red-black-tree .node-color .color-btn.plus-2::before { color: var(--red); content: '+'; font-size: 8pt }
.red-black-tree .node-color .color-btn.plus-2::before { content: '+2' }
.red-black-tree .node-color .color-btn.nil { outline-color: var(--gray) }